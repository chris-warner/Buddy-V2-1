{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar range_1 = __importDefault(require(\"lodash/range\"));\n\nvar includes_1 = __importDefault(require(\"lodash/includes\"));\n\nvar isNil_1 = __importDefault(require(\"lodash/isNil\"));\n\nvar isArray_1 = __importDefault(require(\"lodash/isArray\"));\n\nvar uniq_1 = __importDefault(require(\"lodash/uniq\"));\n\nvar some_1 = __importDefault(require(\"lodash/some\"));\n\nvar moment_1 = __importDefault(require(\"moment\"));\n\nvar const_1 = require(\"./const\");\n\nvar buildCalendarValues = function buildCalendarValues(localization) {\n  /*\n    Return array of months (strings) like ['Aug', 'Sep', ...]\n    that used to populate calendar's page.\n  */\n  var localLocale = localization ? moment_1.default.localeData(localization) : undefined;\n  return localLocale ? localLocale.monthsShort() : moment_1.default.monthsShort();\n};\n\nexports.buildCalendarValues = buildCalendarValues;\n\nvar getInitialDatePosition = function getInitialDatePosition(selectable, currentDate) {\n  if (selectable.indexOf(currentDate.month()) < 0) {\n    return selectable[0];\n  }\n\n  return currentDate.month();\n};\n\nexports.getInitialDatePosition = getInitialDatePosition;\n\nvar getDisabledPositions = function getDisabledPositions(enable, disable, maxDate, minDate, currentDate) {\n  /*\n    Return position numbers of months that should be displayed as disabled\n    (position in array returned by `this.buildCalendarValues`).\n  */\n  var disabled = [];\n\n  if (isArray_1.default(enable)) {\n    var enabledMonthPositions_1 = enable.filter(function (monthMoment) {\n      return monthMoment.isSame(currentDate, 'year');\n    }).map(function (monthMoment) {\n      return monthMoment.month();\n    });\n    disabled = disabled.concat(range_1.default(0, const_1.MONTHS_IN_YEAR).filter(function (monthPosition) {\n      return !includes_1.default(enabledMonthPositions_1, monthPosition);\n    }));\n  }\n\n  if (isArray_1.default(disable)) {\n    disabled = disabled.concat(disable.filter(function (monthMoment) {\n      return monthMoment.year() === currentDate.year();\n    }).map(function (monthMoment) {\n      return monthMoment.month();\n    }));\n  }\n\n  if (!isNil_1.default(maxDate)) {\n    if (maxDate.year() === currentDate.year()) {\n      disabled = disabled.concat(range_1.default(maxDate.month() + 1, const_1.MONTHS_IN_YEAR));\n    }\n\n    if (maxDate.year() < currentDate.year()) {\n      disabled = range_1.default(0, const_1.MONTHS_IN_YEAR);\n    }\n  }\n\n  if (!isNil_1.default(minDate)) {\n    if (minDate.year() === currentDate.year()) {\n      disabled = disabled.concat(range_1.default(0, minDate.month()));\n    }\n\n    if (minDate.year() > currentDate.year()) {\n      disabled = range_1.default(0, const_1.MONTHS_IN_YEAR);\n    }\n  }\n\n  if (disabled.length > 0) {\n    return uniq_1.default(disabled);\n  }\n};\n\nexports.getDisabledPositions = getDisabledPositions;\n\nvar isNextPageAvailable = function isNextPageAvailable(maxDate, enable, currentDate) {\n  if (isArray_1.default(enable)) {\n    return some_1.default(enable, function (enabledMonth) {\n      return enabledMonth.isAfter(currentDate, 'year');\n    });\n  }\n\n  if (isNil_1.default(maxDate)) {\n    return true;\n  }\n\n  return currentDate.year() < maxDate.year();\n};\n\nexports.isNextPageAvailable = isNextPageAvailable;\n\nvar isPrevPageAvailable = function isPrevPageAvailable(minDate, enable, currentDate) {\n  if (isArray_1.default(enable)) {\n    return some_1.default(enable, function (enabledMonth) {\n      return enabledMonth.isBefore(currentDate, 'year');\n    });\n  }\n\n  if (isNil_1.default(minDate)) {\n    return true;\n  }\n\n  return currentDate.year() > minDate.year();\n};\n\nexports.isPrevPageAvailable = isPrevPageAvailable;","map":null,"metadata":{},"sourceType":"script"}