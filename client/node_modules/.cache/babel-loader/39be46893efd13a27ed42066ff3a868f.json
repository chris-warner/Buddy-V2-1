{"ast":null,"code":"import axios from \"axios\";\nvar shelters = [\"10409\", \"10410\"]; // Export an object containing methods we'll use for accessing the random user API\n\nexport default {\n  //original: getUsersByLanguage\n  //new: getDogsByShelter\n  getDogsByShelter: function getDogsByShelter(shelterzipcode) {\n    return new Promise(function (resolve, reject) {\n      axios.get(\"api/dogs\").then(function (res) {\n        console.log(res);\n        var dogs = res.data.results;\n        var results = dogs.map(function (dog) {\n          return {\n            name: dog.name,\n            breed: dog.breed,\n            shelter: dog.shelterName,\n            image: dog.image,\n            shelterzip: shelterzipcode\n          };\n        });\n        resolve(results);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  },\n  // Return a Promise to simulate an async call\n  getShelterList: function getShelterList() {\n    return new Promise(function (resolve) {\n      resolve(shelters);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/Buddy-V2-1/client/src/utils/API.js"],"names":["axios","shelters","getDogsByShelter","shelterzipcode","Promise","resolve","reject","get","then","res","console","log","dogs","data","results","map","dog","name","breed","shelter","shelterName","image","shelterzip","catch","err","getShelterList"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,CACf,OADe,EAEf,OAFe,CAAjB,C,CAIA;;AACA,eAAe;AACb;AACA;AAEAC,EAAAA,gBAAgB,EAAE,0BAASC,cAAT,EAAyB;AACzC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACrCN,MAAAA,KAAK,CAACO,GAAN,CAAU,UAAV,EAAsBC,IAAtB,CAA2B,UAACC,GAAD,EAAQ;AACjCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMG,IAAI,GAAGH,GAAG,CAACI,IAAJ,CAASC,OAAtB;AACA,YAAMA,OAAO,GAAGF,IAAI,CAACG,GAAL,CAAS,UAACC,GAAD,EAAS;AAChC,iBAAO;AACLC,YAAAA,IAAI,EAAED,GAAG,CAACC,IADL;AAELC,YAAAA,KAAK,EAAEF,GAAG,CAACE,KAFN;AAGLC,YAAAA,OAAO,EAAEH,GAAG,CAACI,WAHR;AAILC,YAAAA,KAAK,EAAEL,GAAG,CAACK,KAJN;AAKLC,YAAAA,UAAU,EAAEnB;AALP,WAAP;AAOD,SARe,CAAhB;AASAE,QAAAA,OAAO,CAACS,OAAD,CAAP;AACD,OAbD,EAaGS,KAbH,CAaS,UAACC,GAAD;AAAA,eAASlB,MAAM,CAACkB,GAAD,CAAf;AAAA,OAbT;AAcD,KAfM,CAAP;AAgBD,GArBY;AAsBb;AACAC,EAAAA,cAAc,EAAE,0BAAW;AACzB,WAAO,IAAIrB,OAAJ,CAAY,UAACC,OAAD,EAAY;AAC7BA,MAAAA,OAAO,CAACJ,QAAD,CAAP;AACD,KAFM,CAAP;AAGD;AA3BY,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst shelters = [\n  \"10409\",\n  \"10410\"\n];\n// Export an object containing methods we'll use for accessing the random user API\nexport default {\n  //original: getUsersByLanguage\n  //new: getDogsByShelter\n\n  getDogsByShelter: function(shelterzipcode) {\n    return new Promise((resolve, reject)=> {\n      axios.get(\"api/dogs\").then((res)=> {\n        console.log(res);\n        const dogs = res.data.results;\n        const results = dogs.map((dog) => {\n          return {\n            name: dog.name,\n            breed: dog.breed,\n            shelter: dog.shelterName,\n            image: dog.image,\n            shelterzip: shelterzipcode,\n          }\n        })\n        resolve(results);\n      }).catch((err) => reject(err));\n    })\n  },\n  // Return a Promise to simulate an async call\n  getShelterList: function() {\n    return new Promise((resolve)=> {\n      resolve(shelters);\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}